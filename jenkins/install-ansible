pipeline {
    agent {
        kubernetes {
            label 'jenkins-jenkins-agent'
            defaultContainer 'dind'
        }
    }

    environment {
        PRIVATE_KEY = credentials('PRIVATE_KEY')
        PUBLIC_KEY = credentials('PUBLIC_KEY') 
    }

    stages {
        stage('Setup SSH Keys') {
            steps {
                sh '''
                mkdir -p ~/.ssh
                echo "${PRIVATE_KEY}" > ~/.ssh/id_rsa
                echo "${PUBLIC_KEY}" > ~/.ssh/id_rsa.pub
                chmod 600 ~/.ssh/id_rsa
                chmod 600 ~/.ssh/id_rsa.pub
                '''
            }
        }

        stage('Install Ansible') {
            steps {
                sh '''
                # Detectar si apt-get existe
                if ! command -v apt-get >/dev/null 2>&1; then
                    echo "apt-get no encontrado. Instalando paquetes necesarios..."
                    apk update && apk add --no-cache bash curl gnupg lsb-release
                fi

                # Agregar repositorio de Ansible e instalar
                apt-get update
                apt-get install -y gnupg curl lsb-release software-properties-common
                echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu focal main" > /etc/apt/sources.list.d/ansible.list
                apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367
                apt-get update
                apt-get install -y ansible

                # Verificar instalaci√≥n
                ansible --version
                '''
            }
        }


        stage('Run Ansible Playbook') {
            steps {
                sh '''
                cd ansible
                ansible-playbook -i inventory.ini install_ansible_and_dependencies.yaml
                '''
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed!'
        }
    }
}
