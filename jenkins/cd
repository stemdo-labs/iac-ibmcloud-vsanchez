pipeline {
    agent {
        kubernetes {
            label 'agent-vsanchez'
            yaml """
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubernetes.jenkins.io/last-refresh: "1736262961283"
  labels:
    jenkins/jenkins-agent: "true"
    jenkins/label-digest: "custom-500b4f18aee87616849e4f4c2435020898e34aa0"
    jenkins/label: "custom-jenkins-agent"
    kubernetes.jenkins.io/controller: "http___jenkins_default_svc_cluster_local_8080x"
  name: "custom-agent-abc123"
  namespace: "custom-namespace"
spec:
  containers:
  - command:
    - "dockerd-entrypoint.sh"
    env:
    - name: "JENKINS_URL"
      value: "http://jenkins.custom-namespace.svc.cluster.local:8080/"
    image: "custom-docker-image:1.0"
    imagePullPolicy: "IfNotPresent"
    name: "custom-dind"
    resources:
      limits:
        memory: "2Gi"
        cpu: "1"
      requests:
        memory: "1Gi"
        cpu: "500m"
    securityContext:
      privileged: true
    tty: false
    volumeMounts:
    - mountPath: "/custom/path/jenkins/agent"
      name: "custom-workspace-volume"
      readOnly: false
    workingDir: "/custom/path/jenkins/agent"
  - args:
    - "custom-secret"
    - "custom-agent-abc123"
    env:
    - name: "JENKINS_SECRET"
      value: "custom-secret"
    - name: "JENKINS_TUNNEL"
      value: "jenkins-agent.custom-namespace.svc.cluster.local:50000"
    - name: "JENKINS_AGENT_NAME"
      value: "custom-agent-abc123"
    - name: "REMOTING_OPTS"
      value: "-noReconnectAfter 1d"
    - name: "JENKINS_NAME"
      value: "custom-agent-abc123"
    - name: "JENKINS_AGENT_WORKDIR"
      value: "/custom/path/jenkins/agent"
    - name: "JENKINS_URL"
      value: "http://jenkins.custom-namespace.svc.cluster.local:8080/"
    image: "custom-jnlp-agent:latest"
    imagePullPolicy: "IfNotPresent"
    name: "custom-jnlp"
    resources:
      limits:
        memory: "512Mi"
        cpu: "512m"
      requests:
        memory: "512Mi"
        cpu: "512m"
    tty: false
    volumeMounts:
    - mountPath: "/custom/path/jenkins/agent"
      name: "custom-workspace-volume"
      readOnly: false
    workingDir: "/custom/path/jenkins/agent"
  hostNetwork: false
  nodeSelector:
    kubernetes.io/os: "linux"
  restartPolicy: "Never"
  securityContext:
    runAsGroup: 0
    runAsUser: 0
  serviceAccountName: "custom-service-account"
  volumes:
  - emptyDir:
      medium: ""
    name: "custom-workspace-volume"
"""
        }
    }
    environment {
        APIKEY = credentials('IBM_CLOUD_API_KEY_VSANCHEZ') 
    }
    parameters {
        string(name: 'ENVIRONMENT', defaultValue: 'develop', description: 'Ambiente de despliegue (develop/production)')
        string(name: 'MICROSERVICE', defaultValue: 'backend', description: 'Microservicio a desplegar (backend/frontend)')
        string(name: 'VERSION', defaultValue: '3.0.0', description: 'VersiÃ³n del microservicio')
    }
    stages {
        stage('Clonar repositorio principal') {
            steps {
                script {
                    dir('repo-principal') {
                        git branch: "develop", url: "https://github.com/stemdo-labs/final-project-gestion-rrhh-${MICROSERVICE}-ValentinoSanchez00.git"

                    }
                }
            }
        }
        stage('Preparar Entorno') {
            steps {
                dir('repo-principal') {
                    sh '''
                        curl -fsSL https://clis.cloud.ibm.com/install/linux | bash
                        ibmcloud plugin install container-registry -r 'IBM Cloud'
                        sleep 10
                        docker version
                        ibmcloud --version
                        ibmcloud plugin list
                    '''
                
                }
            }
        }
        stage('Login IBM Cloud') {
            steps {
                sh """
                ls -l
                ibmcloud login --apikey ${APIKEY} -r eu-gb
                ibmcloud target -g Stemdo_Sandbox
                ibmcloud cr region-set global
                ibmcloud cr login
                ibmcloud cr namespace-add cr-vsanchez
                ibmcloud plugin install container-service
                ibmcloud plugin update ks
                ibmcloud ks cluster config --cluster ez-ibm-openshift-vpc-6zmu --admin
                """
            }
        }
      
        stage('Crear namespace en el cluster'){
            steps {
                dir('repo-principal') {
                    sh """
                    if ! oc get ns vsanchez &>/dev/null; then
                        oc create ns vsanchez
                        oc adm policy add-scc-to-user anyuid -z default -n vsanchez
                    else
                        echo "El proyecto 'vsanchez' ya existe. No se crea nuevamente."
                    fi
                    """
                }
            }
        }
        stage('Crear secreto para las credenciales') {
            steps {
                script {
                    sh """
                    if ! oc get secret ibm-registry-secret -n vsanchez > /dev/null 2>&1; then
                        oc create secret docker-registry ibm-registry-secret \
                        --docker-server=icr.io \
                        --docker-username=iamapikey \
                        --docker-password=${APIKEY} \
                        -n vsanchez
                    fi
                    """
                }
            }
        }


        stage('Desplegar chart') {
            steps {
                dir('repo-principal') {
                    sh """
                        helm upgrade --install chart-${params.MICROSERVICE} \
                        --namespace vsanchez \
                        --version ${params.VERSION} \
                        -f values${params.ENVIRONMENT}.yaml \
                        oci://icr.io/cr-vsanchez/chart-${params.MICROSERVICE}
                    """
                }
            }
        }
    }
}