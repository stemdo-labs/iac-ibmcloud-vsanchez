pipeline {
    agent {
        kubernetes {
            label 'jenkins-jenkins-agent'
            defaultContainer 'dind'
        }
    }

    environment {
        APIKEY = credentials('IBM_CLOUD_API_KEY_VSANCHEZ') 
    }

    parameters {
        string(name: 'MICROSERVICE', defaultValue: 'backend', description: 'Nombre del microservicio')
        string(name: 'ENVIRONMENT', defaultValue: 'develop', description: 'Ambiente de despliegue (develop/production)')
    }

    stages {

        stage('Instalar Helm') {
            steps {
                sh '''
                curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
                '''
            }
        }

        stage('Actualizar Chart.yaml') {
            steps {
                script {
                def environment = params.ENVIRONMENT
                def microservice = params.MICROSERVICE
                def chartFile = "charts/chart-${microservice}/Chart.yaml"

                sh """
                echo "Procesando Chart.yaml en ${chartFile}"
                sed -i 's/^name: .*/name: chart-${microservice}-${environment}/' ${chartFile}
                mv charts/chart-${microservice}/ charts/chart-${microservice}-${environment}/
                echo "Actualizado el nombre en Chart.yaml a chart-${microservice}-${environment}"
                """
                }
            }
        }


        stage('Empaquetar') {
            steps {
                sh '''
                cd charts/
                ls -l
                helm package ./chart-${params.MICROSERVICE}-${params.ENVIRONMENT}
                '''
            }
        }

        stage('Instalar CLI de Azure') {
            steps {
                sh '''
                curl -sL https://aka.ms/InstallAzureCLIDeb | bash
                '''
            }
        }

        stage('Instalar IBM Cloud CLI') {
            steps {
                sh '''
                curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
                ibmcloud plugin install container-registry -r 'IBM Cloud'
                ibmcloud plugin install container-service -r 'IBM Cloud'
                '''
            }
        }

        stage('Login en IBM Cloud') {
            steps {
                sh '''
                ibmcloud login --apikey ${APIKEY} -r eu-gb
                ibmcloud target -g Stemdo_Sandbox
                ibmcloud cr login
                '''
            }
        }

        stage('Subir Chart') {
            steps {
                script {
                    dir('charts') { 
                        def chartFile = sh(script: "ls -t *${params.MICROSERVICE}-${params.ENVIRONMENT}*.tgz | head -n 1", returnStdout: true).trim()
                        echo "Subiendo chart ${chartFile}"
                        sh "helm push ${chartFile} oci://uk.icr.io/cr-vsanchez"
                    }
                }
            }
        }
    }
}
