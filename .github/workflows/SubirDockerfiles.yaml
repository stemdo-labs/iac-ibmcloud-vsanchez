name: Reusable Subir Imagen

on:
  workflow_call:
    inputs:
      MICROSERVICE:
        required: true
        type: string
      DB_HOST: 
        required: true
        type: string
      DB_PORT: 
        required: true
        type: string
    secrets:
      ARM_CLIENT_ID:
        required: true
      ARM_CLIENT_SECRET:
        required: true
      ARM_TENANT_ID:
        required: true
      ARM_SUBSCRIPTION_ID:  
        required: true
      DB_NAME:
        required: true
      DB_USER:
        required: true
      DB_PASSWORD:
        required: true

jobs:
  set-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
    steps:
      - name: Determinar el ambiente (Environment)
        id: set-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "environment=production" >> $GITHUB_ENV
            echo "::set-output name=environment::production"
          else
            echo "environment=develop" >> $GITHUB_ENV
            echo "::set-output name=environment::develop"
          fi

  testFrontend:
    if: ${{ inputs.MICROSERVICE == 'frontend' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      - name: Test frontend
        run: |
          echo "Configurando y ejecutando linter"
          npm install eslint --save-dev
          npx eslint --init
          npx eslint . --ext .js,.jsx,.ts,.tsx

  testBackend:
    if: ${{ inputs.MICROSERVICE == 'backend' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    env:
      SPRING_DB_HOST: ${{ inputs.DB_HOST }}
      SPRING_DB_PORT: ${{ inputs.DB_PORT }}
      SPRING_DB_NAME: ${{ secrets.DB_NAME }}
      SPRING_DB_USER: ${{ secrets.DB_USER }}
      SPRING_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
 
      # - name: Run Maven tests
      #   run: mvn test

  subirImagen:
    env:
      ENVIRONMENT: develop    
    needs: [testFrontend, testBackend, set-environment]
    if: always()
    environment: ${{ needs.set-environment.outputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v3
      
      - name: Mostrar archivos
        run: ls
      
      - name: Configurar archivo default.conf según el environment
        if: ${{ inputs.MICROSERVICE == 'frontend' }}
        run: |
          echo "Configurando default.conf para el entorno ${{ needs.set-environment.outputs.environment }}"
          sed -i "s|proxy_pass http://svc-backend:8080;|proxy_pass http://backend-${{ needs.set-environment.outputs.environment }}-svc:8080;|g" default.conf

      - name: Configurar location 
        if: ${{ inputs.MICROSERVICE == 'frontend' &&  needs.set-environment.outputs.environment  == 'develop' }}
        run: |
          echo "Configurando location para el entorno ${{ needs.set-environment.outputs.environment }}"
          sed -i "s|location /pepe-vsanchez |location /dev-vsanchez |g" default.conf
          sed -i "s|proxy_pass http://backend-pepe-svc:8080;|proxy_pass http://backend-develop-svc:8080; |g" default.conf

      - name: Configurar location 
        if: ${{ inputs.MICROSERVICE == 'frontend' &&  needs.set-environment.outputs.environment  == 'production' }}
        run: |
          echo "Configurando location para el entorno ${{ needs.set-environment.outputs.environment }}"
          sed -i "s|location /pepe-vsanchez |location /prod-vsanchez |g" default.conf
          sed -i "s|proxy_pass http://backend-pepe-svc:8080;|proxy_pass http://backend-production-svc:8080; |g" default.conf
          
      - name: Cat default.conf
        if: ${{ inputs.MICROSERVICE == 'frontend' }}
        run: |
          cat default.conf
      - name: Instalar CLI de Azure
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Iniciar sesión en Azure
        uses: azure/login@v1
        with:
          creds: |
            {
              "clientId": "${{ secrets.ARM_CLIENT_ID }}",
              "clientSecret": "${{ secrets.ARM_CLIENT_SECRET }}",
              "tenantId": "${{ secrets.ARM_TENANT_ID }}",
              "subscriptionId": "${{ secrets.ARM_SUBSCRIPTION_ID }}"
            }

      - name: Login en Azure Container Registry
        run: |
          az acr login --name containerregistryvsanchez

      - name: Extraer versión desde package.json (Frontend)
        if: ${{ inputs.MICROSERVICE == 'frontend' }}
        uses: stemdo-labs/final-project-exercise-ValentinoSanchez00/.github/actions/frontend@develop
        id: frontend-version
        with:
          path: ./package.json

      
      - name: Extraer versión desde pom.xml (Backend)
        if: ${{ inputs.MICROSERVICE == 'backend' }}
        uses: stemdo-labs/final-project-exercise-ValentinoSanchez00/.github/actions/backend@develop
        id: backend-version
        with:
          path: ./pom.xml

      - name: Construir imagen
        run: |
          docker build -t imagen-proyecto-${{ inputs.MICROSERVICE }}-${{ needs.set-environment.outputs.environment }} .

      - name: taggear la imagen
        if: ${{ inputs.MICROSERVICE == 'frontend' }}
        run: |
          docker tag imagen-proyecto-${{ inputs.MICROSERVICE }}-${{ needs.set-environment.outputs.environment }} containerregistryvsanchez.azurecr.io/imagen-proyecto-${{ inputs.MICROSERVICE }}-${{ needs.set-environment.outputs.environment }}:${{ steps.frontend-version.outputs.version }}
      
      - name: taggear la imagen
        if: ${{ inputs.MICROSERVICE == 'backend' }}
        run: |
          docker tag imagen-proyecto-${{ inputs.MICROSERVICE }}-${{ needs.set-environment.outputs.environment }} containerregistryvsanchez.azurecr.io/imagen-proyecto-${{ inputs.MICROSERVICE }}-${{ needs.set-environment.outputs.environment }}:${{ steps.backend-version.outputs.version }}
      
      - name: Pushear imagen (Frontend)
        if: ${{ inputs.MICROSERVICE == 'frontend' }}
        run: |
          docker push containerregistryvsanchez.azurecr.io/imagen-proyecto-${{ inputs.MICROSERVICE }}-${{ needs.set-environment.outputs.environment }}:${{ steps.frontend-version.outputs.version }}

      - name: Pushear imagen (Backend)
        if: ${{ inputs.MICROSERVICE == 'backend' }}
        run: |
          docker push containerregistryvsanchez.azurecr.io/imagen-proyecto-${{ inputs.MICROSERVICE }}-${{ needs.set-environment.outputs.environment }}:${{ steps.backend-version.outputs.version }}